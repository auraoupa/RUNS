#!/bin/ksh
#key_jade -N zmetamon
#key_jade -l select=:ncpus=24:mpiprocs=24
#key_jade -l walltime=03:00:00
#key_jade -l cluster=hpt
#key_jade -M aurelie.albert@univ-grenoble-alpes.fr
#key_jade -mb -me
#key_jade -v NB_NODES=

#key_vayu -N zmetamon
#key_vayu -l ncpus=24
#key_vayu -l walltime=03:00:00
#key_vayu -M aurelie.albert@univ-grenoble-alpes.fr
#key_vayu -mb -me
#key_vayu -Wgroup_list=v45
#key_vayu -P x77
#key_vayu -q normal
#key_vayu -v NB_NODES=

#SBATCH --nodes=
#SBATCH --ntasks=
#SBATCH --ntasks-per-node=24
#SBATCH --constraint=HSW24
#SBATCH --threads-per-core=1
#SBATCH -J zmetamon
#SBATCH -e zmetamon.e%j
#SBATCH -o zmetamon.o%j
#SBATCH --constraint=HSW24
#SBATCH --time=03:00:00
#SBATCH --exclusive

#MSUB -r zmetamon
#MSUB -n  
#MSUB -N  
#MSUB -T 03:00:00
#MSUB -q standard
#MSUB -o zmetamon.%I
#MSUB -e zmetamon.%I
#MSUB -A gen0727

#$ -N zmetamon 
#$ -cwd
#$ -j y
#$ -S /bin/bash
#$ -pe one 
#$ -v NB_NODES=

### LoadLeveler on ULAM and VARGAS
## title of the run
# @ job_name = zmetamon
## Output listing location
# @ output = $(job_name).$(jobid)
# @ error  = $(output)
# @ job_type = 
### DO NEVER ERASE THE FOLLOWING LINE
# @ total_tasks = 
# specifique Adapp
# @ requirements = (Feature == "prepost")
# @ wall_clock_limit = 03:00:00
# @ as_limit = 3.2gb
# @ queue

## If R_MONITOR is a TMPDIR created by the job manager :
## the scripts copied by RUN_metamon.ksh are lost in the haze of a forgotten no man's land
## so we copy another time. If they are already there, it could do no harm

RNDTMPDIR=0

if [ $RNDTMPDIR == 1 ] ; then

cp ./config_def.ksh         $TMPDIR
cp ./function_def.ksh       $TMPDIR

cd $TMPDIR

. ./config_def.ksh
. ./function_def.ksh

cp $PRODTOOLS/create_sections_list.ksh    $TMPDIR
cp $PRODTOOLS/drakkar_sections_table.txt  $TMPDIR
cp $PRODTOOLS/drakkar_trpsig_table.txt    $TMPDIR
cp $PRODTOOLS/monitor_prod.ksh            $TMPDIR

if [ $useMPI == 1 ] ; then cp $MPITOOLS/mpi_metamon $TMPDIR ; fi

else

cd /scratch/cnt0024/hmg2840/albert7a/MONITOR_NACHOS12.L75-MAA09/

. ./config_def.ksh
. ./function_def.ksh

fi


# set the list of years you want to monitor 'at once'  
yinit=2010              # initial year 
yend=2010

YEARS=$( seq $yinit $yend )


if [ $useMPI = 1 ] ; then
### Yeah baby it is parallel !!!

if [ $MACHINE = 'jade' ] ; then
   mpiexec_mpt -n  ./mpi_metamon $YEARS
elif [ $MACHINE = 'occigen' ] ; then
   ulimit -s unlimited
   srun --mpi=pmi2 -n   ./mpi_metamon $YEARS
elif [ $MACHINE = 'occigen2' ] ; then
   ulimit -s unlimited
   srun --mpi=pmi2 -n   ./mpi_metamon $YEARS
elif [ $MACHINE = 'curie' ] ; then
#  module unload netcdf
#   module unload hdf5
#   module load nco
   ccc_mprun -E '-m cyclic ' -n   ./mpi_metamon $YEARS
elif [ $MACHINE = 'vayu' ] ; then
   mpirun -n   ./mpi_metamon $YEARS
elif [ $MACHINE = 'gaia' ] ; then
   source $HOME/.bashrc
   mpirun -mca btl_tcp_if_include eth0 -np   ./mpi_metamon $YEARS
elif [ $MACHINE = 'ulam' ] ; then
   ./mpi_metamon $YEARS
elif [ $MACHINE = 'ada' ] ; then
   poe ./mpi_metamon $YEARS
fi

else
### damn it is only sequential...
### this allows to ensure compatibility for most of the tags
  if [ ${#yinit} -gt 4 ] ; then
     # interannual plot
     chmod +x monitor_prod.ksh
     ./monitor_prod.ksh $yinit
  elif [ ${#yinit} -gt 4 ] ; then
     # standard modern year
     chmod +x monitor_prod.ksh
     ./monitor_prod.ksh $yinit
  else
     # climato runs
     yinit=$( printf "%04d" $yinit ) 
     chmod +x monitor_prod.ksh
     ./monitor_prod.ksh $yinit
  fi


fi
